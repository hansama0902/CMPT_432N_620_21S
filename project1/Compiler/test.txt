1.
{}$
{{{{{{}}}}}}$
{{{{{{}}}/*	comments	are	ignored	*/}}}}$
{/*	comments	are	still	ignored	*/int@}$
{
  int a
  a = a
  string b
  a = b
}$

output:
INFO Lexer - Lexing program 1 ...

DEBUG Lexer - L_BRACE[ { ]  found at (1, 1)

DEBUG Lexer - R_BRACE[ } ]  found at (1, 2)

DEBUG Lexer - EOP[ $ ]  found at (1, 3)

INFO Lexer - Lex completed with 0 errors

INFO Lexer - Lexing program 2 ...

DEBUG Lexer - L_BRACE[ { ]  found at (2, 1)

DEBUG Lexer - L_BRACE[ { ]  found at (2, 2)

DEBUG Lexer - L_BRACE[ { ]  found at (2, 3)

DEBUG Lexer - L_BRACE[ { ]  found at (2, 4)

DEBUG Lexer - L_BRACE[ { ]  found at (2, 5)

DEBUG Lexer - L_BRACE[ { ]  found at (2, 6)

DEBUG Lexer - R_BRACE[ } ]  found at (2, 7)

DEBUG Lexer - R_BRACE[ } ]  found at (2, 8)

DEBUG Lexer - R_BRACE[ } ]  found at (2, 9)

DEBUG Lexer - R_BRACE[ } ]  found at (2, 10)

DEBUG Lexer - R_BRACE[ } ]  found at (2, 11)

DEBUG Lexer - R_BRACE[ } ]  found at (2, 12)

DEBUG Lexer - EOP[ $ ]  found at (2, 13)

INFO Lexer - Lex completed with 0 errors

INFO Lexer - Lexing program 3 ...

DEBUG Lexer - L_BRACE[ { ]  found at (3, 1)

DEBUG Lexer - L_BRACE[ { ]  found at (3, 2)

DEBUG Lexer - L_BRACE[ { ]  found at (3, 3)

DEBUG Lexer - L_BRACE[ { ]  found at (3, 4)

DEBUG Lexer - L_BRACE[ { ]  found at (3, 5)

DEBUG Lexer - L_BRACE[ { ]  found at (3, 6)

DEBUG Lexer - R_BRACE[ } ]  found at (3, 7)

DEBUG Lexer - R_BRACE[ } ]  found at (3, 8)

DEBUG Lexer - R_BRACE[ } ]  found at (3, 9)

DEBUG Lexer - R_BRACE[ } ]  found at (3, 35)

DEBUG Lexer - R_BRACE[ } ]  found at (3, 36)

DEBUG Lexer - R_BRACE[ } ]  found at (3, 37)

DEBUG Lexer - R_BRACE[ } ]  found at (3, 38)

DEBUG Lexer - EOP[ $ ]  found at (3, 39)

INFO Lexer - Lex completed with 0 errors

INFO Lexer - Lexing program 4 ...

DEBUG Lexer - L_BRACE[ { ]  found at (4, 1)

DEBUG Lexer - I_TYPE[ int ]  found at (4, 33)

ERROR Lexer - Error:4:36 Unrecognized Token:@suggestion: your input is not supported!

DEBUG Lexer - R_BRACE[ } ]  found at (4, 38)

DEBUG Lexer - EOP[ $ ]  found at (4, 39)

ERROR Lexer - Lex failed with 1 error(s)

INFO Lexer - Lexing program 5 ...

DEBUG Lexer - L_BRACE[ { ]  found at (5, 1)

DEBUG Lexer - I_TYPE[ int ]  found at (6, 3)

DEBUG Lexer - CHAR[ a ]  found at (6, 8)

DEBUG Lexer - CHAR[ a ]  found at (7, 3)

DEBUG Lexer - ASSIGN[ = ]  found at (7, 5)

DEBUG Lexer - CHAR[ a ]  found at (7, 7)

DEBUG Lexer - I_TYPE[ string ]  found at (8, 3)

DEBUG Lexer - CHAR[ b ]  found at (8, 11)

DEBUG Lexer - CHAR[ a ]  found at (9, 3)

DEBUG Lexer - ASSIGN[ = ]  found at (9, 5)

DEBUG Lexer - CHAR[ b ]  found at (9, 7)

2.
int i = 0
while (int i != 9){
  print("i is " + i)
  i = i + 1
}$
output:
INFO Lexer - Lexing program 1 ...

DEBUG Lexer - I_TYPE[ int ]  found at (2, 1)

DEBUG Lexer - CHAR[ i ]  found at (2, 6)

DEBUG Lexer - ASSIGN[ = ]  found at (2, 8)

DEBUG Lexer - DIGIT[ 0 ]  found at (2, 10)

DEBUG Lexer - WHILE[ while ]  found at (3, 1)

DEBUG Lexer - L_PAREN[ ( ]  found at (3, 8)

DEBUG Lexer - I_TYPE[ int ]  found at (3, 9)

DEBUG Lexer - CHAR[ i ]  found at (3, 14)

DEBUG Lexer - BOOLOP[ != ]  found at (3, 16)

DEBUG Lexer - ASSIGN[ = ]  found at (3, 17)

DEBUG Lexer - DIGIT[ 9 ]  found at (3, 19)

DEBUG Lexer - R_PAREN[ ) ]  found at (3, 20)

DEBUG Lexer - L_BRACE[ { ]  found at (3, 21)

DEBUG Lexer - PRINT[ print ]  found at (4, 3)

DEBUG Lexer - L_PAREN[ ( ]  found at (4, 9)

DEBUG Lexer - QUOTE[ " ]  found at (4, 10)

DEBUG Lexer - CHAR[ char ]  found at (4, 11)

DEBUG Lexer - CHAR[ char ]  found at (4, 13)

DEBUG Lexer - CHAR[ char ]  found at (4, 14)

DEBUG Lexer - QUOTE[ " ]  found at (4, 16)

DEBUG Lexer - OP[ + ]  found at (4, 18)

DEBUG Lexer - CHAR[ i ]  found at (4, 20)

DEBUG Lexer - R_PAREN[ ) ]  found at (4, 21)

DEBUG Lexer - CHAR[ i ]  found at (5, 3)

DEBUG Lexer - ASSIGN[ = ]  found at (5, 5)

DEBUG Lexer - CHAR[ i ]  found at (5, 7)

DEBUG Lexer - OP[ + ]  found at (5, 9)

DEBUG Lexer - DIGIT[ 1 ]  found at (5, 11)
3.
{1 = 2}
output:
INFO Lexer - Lexing program 1 ...

DEBUG Lexer - L_BRACE[ { ]  found at (1, 1)

DEBUG Lexer - DIGIT[ 1 ]  found at (1, 2)

DEBUG Lexer - ASSIGN[ = ]  found at (1, 4)

DEBUG Lexer - DIGIT[ 2 ]  found at (1, 6)

DEBUG Lexer - R_BRACE[ } ]  found at (1, 7)

WARNING Lexer - there is no $ in the program

